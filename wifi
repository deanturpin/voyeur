#!/bin/bash

# Look up vendor from first half of MAC
function vendor {

	# If a MAC matches then look up the vendor
	if [[ $* =~ ([[:xdigit:]]{2}:){5}[[:xdigit:]]{2} ]]; then

		# Strip colons
		mac=${BASH_REMATCH//:/}

		# Look up the vendor using the first half of the MAC
		v=$(grep -i ${mac:0:6} /usr/share/ieee-data/oui.txt)

		# Print if not empty (strip leading repeated info)
		[[ $v != '' ]] && echo ${v#*)} || echo vendor unknown
	fi
}

# JSON key
function key {
	echo -en \\t\"$*\":\ 
}

# JSON value
function value {
	echo -e \\t\"$*\",
}

# Trim and strip quotes
function trim_ap {
	ap=${*#*:}
	echo ${ap//\"/}
}

echo \{

# Print something that changes each time
key date
value $(date)

key currentAP
value $(trim_ap $(iwgetid))

key ipaddress
ip=$(hostname -I)
[[ $ip =~ [^\ ]+ ]] && value $BASH_REMATCH

key curl
curl github.com >& /dev/null && value yes || value no

key gateway
ip route | while read line; do
	
	[[ $line =~ via\ ([[:digit:]]{1,3}\.[[:digit:]]{1,3}\.[[:digit:]]{1,3}\.[[:digit:]]{1,3}) ]] && value ${BASH_REMATCH[1]}
done

key neigh
echo
ip n | while read line; do
	[[ $line =~ FAILED ]] || value $line $(vendor $line)
done

key ports
echo \[
nc -vz 0.0.0.0 1-20000 |& grep succeeded | while read line; do
	[[ $line =~ [[:digit:]]{1,5}\ port.*\] ]] && value $BASH_REMATCH
done
echo -e "\t]"

key scan
echo \[
iwlist wlp1s0 scan | while read line; do

	[[ $line =~ Cell ]] && echo && value $(vendor $line)
	[[ $line =~ ESSID ]] && value $(trim_ap $line)
	[[ $line =~ 'Encryption key:off' ]] && value OPEN
done
echo -e "\t]"

echo -e "\n\t\"end\":\tnull"
echo \}
